- name: Update the system
  apt:
    update_cache: yes
    upgrade: dist

- name: Install required dependencies
  apt:
    name:
      - nodejs
      - npm
      - mysql-server
      - nginx
    state: present

- name: Install pm2 using npm
  npm:
    name: pm2
    global: yes

- name: Check if repository directory exists
  stat:
    path: /home/ubuntu/final-project-frontend
  register: repo_dir

- name: Remove existing repository if it exists
  file:
    path: /home/ubuntu/final-project-frontend
    state: absent
  when: repo_dir.stat.exists

- name: Clone GitHub repository
  git:
    repo: https://github.com/UjjwalBudha/final-project-frontend.git
    dest: /home/ubuntu/final-project-frontend
    update: yes

- name: Install npm packages for frontend1
  command: npm install
  args:
    chdir: /home/ubuntu/final-project-frontend/frontend1
  become: yes

- name: Install npm packages for frontend2
  command: npm install
  args:
    chdir: /home/ubuntu/final-project-frontend/frontend2
  become: yes

- name: Add API to config.js in frontend1
  lineinfile:
    path: /home/ubuntu/final-project-frontend/frontend1/src/config.js
    line: "export const API_URL = 'http://backend-alb-dev-779431800.us-east-1.elb.amazonaws.com';"
    create: yes

- name: Add API to config.js in frontend2
  lineinfile:
    path: /home/ubuntu/final-project-frontend/frontend2/src/config.js
    line: "export const API_URL = 'http://backend-alb-dev-779431800.us-east-1.elb.amazonaws.com';"
    create: yes

- name: Delete all existing PM2 processes
  command: pm2 delete all
  ignore_errors: yes

- name: Start frontend1 application with pm2
  command: pm2 start npm --name frontend1 -- start
  args:
    chdir: /home/ubuntu/final-project-frontend/frontend1
  become: yes

- name: Start frontend2 application with pm2
  command: pm2 start npm --name frontend2 -- start
  args:
    chdir: /home/ubuntu/final-project-frontend/frontend2
  become: yes
  environment:
    PORT: 3001


- name: Deploy Nginx configuration
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-available/default
    owner: root
    group: root
    mode: '0644'

- name: Test Nginx configuration
  command: nginx -t
  register: nginx_test
  ignore_errors: yes

- name: Fail if Nginx configuration test fails
  fail:
    msg: "Nginx configuration test failed"
  when: nginx_test.rc != 0

- name: Restart Nginx to apply the changes
  service:
    name: nginx
    state: restarted
