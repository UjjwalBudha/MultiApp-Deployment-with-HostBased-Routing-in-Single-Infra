name: Deploying an app

on:
  workflow_dispatch:
  push:
    branches: ["dev", "updates"]
  pull_request:
    branches: ["main"]

jobs:
  dev:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      TF_VAR_terraform_key: ${{ secrets.terraform_key }}
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform Init
        run: |
          cd terraform
          terraform init -backend-config="key=${TF_VAR_terraform_key}"

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -var-file=dev.tfvars

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -var-file=dev.tfvars -auto-approve

      - name: Install Ansible and AWS collections
        run: |
          python -m pip install --upgrade pip
          pip install ansible boto3 botocore
          ansible-galaxy collection install amazon.aws

      # - name: Run Ansible Playbooks
      #   run: |
      #     cd ansible
      #     ansible-inventory -i aws_ec2.yml --graph
      #     ansible-playbook -i aws_ec2.yml playbook.yml

      - name: Delete adex directory in EC2
        uses: adexltd/aws-ssm-send-command@master
        id: deleting_directory
        with:
          aws-region: "us-east-1"
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          instance-ids: "i-02292e22dbf2f0f1f"
          working-directory: /var/www/
          command: sudo rm -rf adex

      - name: Install jq for JSON parsing
        run: sudo apt-get install -y jq

      - name: Check SSM Command Status
        run: |
          COMMAND_ID="${{ steps.deleting_directory.outputs.command-id }}"
          INSTANCE_ID="i-02292e22dbf2f0f1f"

          # Wait for the command to execute
          sleep 10

          # Retrieve the command invocation details
          INVOCATION=$(aws ssm get-command-invocation \
            --command-id "$COMMAND_ID" \
            --instance-id "$INSTANCE_ID" \
            --region us-east-1 \
            --output json)

          STATUS=$(echo "$INVOCATION" | jq -r '.Status')
          RESPONSE_CODE=$(echo "$INVOCATION" | jq -r '.ResponseCode')

          echo "Command Status: $STATUS"
          echo "Response Code: $RESPONSE_CODE"

          if [ "$STATUS" == "Success" ] && [ "$RESPONSE_CODE" -eq 0 ]; then
            echo "SSM Command executed successfully"
            exit 0
          else
            echo "SSM Command failed with status: $STATUS and response code: $RESPONSE_CODE"
            exit 1
          fi
